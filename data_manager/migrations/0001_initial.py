# Generated by Django 5.1.6 on 2025-09-10 03:08

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('college_id', models.AutoField(primary_key=True, serialize=False)),
                ('college_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Colleges',
            },
        ),
        migrations.CreateModel(
            name='CourseReviewSummary',
            fields=[
                ('summary_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_code', models.CharField(max_length=20, verbose_name='강의코드')),
                ('course_name', models.CharField(max_length=200, verbose_name='강의명')),
                ('instructor_name', models.CharField(max_length=100, verbose_name='교수명')),
                ('review_count', models.IntegerField(verbose_name='리뷰 개수')),
                ('avg_rating', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='평균 평점')),
                ('dist_json', models.JSONField(verbose_name='분포 JSON')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='최종 갱신일')),
                ('review_sum', models.TextField(blank=True, null=True, verbose_name='리뷰 요약')),
            ],
            options={
                'verbose_name': '강의별 요약 통계',
                'verbose_name_plural': '강의별 요약 통계',
                'db_table': 'course_review_summaries',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=255)),
                ('course_code', models.CharField(max_length=50)),
                ('section', models.CharField(max_length=10)),
                ('credits', models.IntegerField()),
                ('target_year', models.CharField(max_length=50)),
                ('grade_type', models.CharField(blank=True, max_length=20, null=True)),
                ('foreign_course', models.CharField(blank=True, max_length=20, null=True)),
                ('instructor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('lecture_hours', models.DecimalField(decimal_places=1, max_digits=4)),
                ('lecture_times', models.DecimalField(decimal_places=1, max_digits=4)),
                ('lab_hours', models.DecimalField(decimal_places=1, max_digits=4)),
                ('lab_times', models.DecimalField(decimal_places=1, max_digits=4)),
                ('pre_enrollment_count', models.IntegerField(default=0)),
                ('capacity', models.IntegerField(default=0)),
                ('enrolled_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='GraduationRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('total_credits', models.IntegerField()),
                ('major_credits', models.IntegerField()),
                ('general_credits', models.IntegerField()),
                ('free_credits', models.IntegerField()),
                ('total_requirement', models.IntegerField(blank=True, null=True)),
                ('free_requirement', models.IntegerField(blank=True, null=True)),
                ('major_required_credits', models.IntegerField(default=0)),
                ('major_elective_credits', models.IntegerField(default=0)),
                ('major_required_requirement', models.IntegerField(blank=True, null=True)),
                ('major_elective_requirement', models.IntegerField(blank=True, null=True)),
                ('missing_major_subjects', models.TextField(blank=True)),
                ('missing_general_sub', models.TextField(blank=True)),
                ('major_requirement', models.TextField(blank=True)),
                ('general_requirement', models.TextField(blank=True)),
                ('detailed_credits', models.TextField(blank=True)),
                ('completed_courses', models.TextField(blank=True)),
                ('user_student_id', models.CharField(blank=True, max_length=50, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_major', models.CharField(blank=True, max_length=255, null=True)),
                ('user_year', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'graduation_record',
            },
        ),
        migrations.CreateModel(
            name='SavedTimetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('semester_year', models.IntegerField(default=2025)),
                ('semester_term', models.CharField(default='1학기', max_length=10)),
                ('total_credits', models.IntegerField(default=0)),
                ('major_credits', models.IntegerField(default=0)),
                ('elective_credits', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'saved_timetables',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('term', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('course_registration_start', models.DateField()),
                ('course_registration_end', models.DateField()),
            ],
            options={
                'db_table': 'SEMESTER',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('university_id', models.AutoField(primary_key=True, serialize=False)),
                ('university_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Universities',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255)),
                ('category_level', models.IntegerField(default=0)),
                ('version_year', models.IntegerField()),
                ('parent_category', models.ForeignKey(blank=True, db_column='parent_category_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.category')),
            ],
            options={
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='CourseSumm',
            fields=[
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='data_manager.courses', verbose_name='강의')),
                ('course_summarization', models.TextField(help_text='강의에 대한 간략한 설명을 입력하세요.', verbose_name='강의 요약')),
                ('group_activity', models.CharField(choices=[('Y', '있음'), ('N', '없음')], default='N', help_text="조별 과제가 있는 경우 'Y', 없는 경우 'N'을 선택하세요.", max_length=1, verbose_name='조별 과제 여부')),
            ],
            options={
                'verbose_name': '강의 요약 정보',
                'verbose_name_plural': '강의 요약 정보',
                'db_table': 'course_summ',
            },
        ),
        migrations.AddField(
            model_name='courses',
            name='category',
            field=models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.category'),
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('day', models.CharField(max_length=10)),
                ('times', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=255)),
                ('course', models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.courses')),
            ],
            options={
                'db_table': 'course_schedules',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dept_id', models.AutoField(primary_key=True, serialize=False)),
                ('dept_name', models.CharField(max_length=255)),
                ('college', models.ForeignKey(blank=True, db_column='college_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.college')),
                ('university', models.ForeignKey(db_column='university_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.university')),
            ],
            options={
                'db_table': 'Departments',
            },
        ),
        migrations.AddField(
            model_name='courses',
            name='dept',
            field=models.ForeignKey(blank=True, db_column='dept_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.department'),
        ),
        migrations.CreateModel(
            name='GraduationRequirement',
            fields=[
                ('requirement_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('maximum_value', models.IntegerField(default=0)),
                ('minimum_value', models.IntegerField(default=0)),
                ('applicable_year', models.IntegerField()),
                ('category', models.ForeignKey(blank=True, db_column='category_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.category')),
                ('dept', models.ForeignKey(db_column='dept_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.department')),
            ],
            options={
                'db_table': 'GraduationRequirements',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('major_id', models.AutoField(primary_key=True, serialize=False)),
                ('major_name', models.CharField(max_length=255)),
                ('dept', models.ForeignKey(db_column='dept_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.department')),
            ],
            options={
                'db_table': 'Major',
            },
        ),
        migrations.AddField(
            model_name='courses',
            name='major',
            field=models.ForeignKey(blank=True, db_column='major_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.major'),
        ),
        migrations.CreateModel(
            name='RuleSet',
            fields=[
                ('ruleset_id', models.AutoField(primary_key=True, serialize=False)),
                ('ruleset_name', models.CharField(max_length=255, verbose_name='규칙 묶음 이름')),
                ('target_year', models.IntegerField(verbose_name='적용 학년도(입학년도)')),
                ('required_total_credits', models.IntegerField(default=140, verbose_name='요구 총 학점')),
                ('department', models.ForeignKey(db_column='department_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.department')),
            ],
            options={
                'db_table': 'RuleSet',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('rule_id', models.AutoField(primary_key=True, serialize=False)),
                ('min_credits', models.IntegerField(default=0, verbose_name='최소 이수 학점')),
                ('max_credits', models.IntegerField(blank=True, null=True, verbose_name='최대 인정 학점')),
                ('description', models.CharField(max_length=255, verbose_name='규칙 설명')),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.category')),
                ('ruleset', models.ForeignKey(db_column='ruleset_id', on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='data_manager.ruleset')),
            ],
            options={
                'db_table': 'Rule',
            },
        ),
        migrations.CreateModel(
            name='SavedTimetableCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.IntegerField(blank=True, null=True)),
                ('course_name', models.CharField(max_length=255)),
                ('course_code', models.CharField(blank=True, max_length=50)),
                ('credits', models.IntegerField()),
                ('category', models.CharField(blank=True, max_length=100)),
                ('instructor', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('user_note', models.TextField(blank=True)),
                ('custom_color', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='data_manager.savedtimetable')),
            ],
            options={
                'db_table': 'saved_timetable_courses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SavedTimetableSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(max_length=10)),
                ('start_time', models.CharField(max_length=10)),
                ('end_time', models.CharField(max_length=10)),
                ('time_slots', models.CharField(max_length=50)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('timetable_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='data_manager.savedtimetablecourse')),
            ],
            options={
                'db_table': 'saved_timetable_schedules',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='courses',
            name='semester',
            field=models.ForeignKey(db_column='semester_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.semester'),
        ),
        migrations.AddField(
            model_name='college',
            name='university',
            field=models.ForeignKey(db_column='university_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.university'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('admission_year', models.PositiveSmallIntegerField(blank=True, help_text='교과 적용 연도로 사용됩니다.', null=True, verbose_name='입학년도')),
                ('current_grade', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='학년')),
                ('completed_semesters', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='이수 학기')),
                ('user_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='사용자 이름')),
                ('user_student_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='사용자 학번')),
                ('onboarding_status', models.CharField(choices=[('ACCOUNT_CREATED', '계정 생성 완료'), ('PDF_UPLOADED', 'PDF 업로드 완료'), ('INFO_CONFIRMED', '학사 정보 확인 완료'), ('COMPLETED', '온보딩 최종 완료')], default='ACCOUNT_CREATED', max_length=20)),
                ('college', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.college', verbose_name='단과대학')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.department', verbose_name='학과(전공)')),
                ('double_major', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='double_major_profiles', to='data_manager.department', verbose_name='다전공')),
                ('minor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='minor_profiles', to='data_manager.department', verbose_name='부전공')),
                ('rule_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.ruleset', verbose_name='적용 규칙 묶음')),
            ],
            options={
                'verbose_name': '사용자 프로필',
                'verbose_name_plural': '사용자 프로필',
                'db_table': 'UserProfile',
            },
        ),
        migrations.CreateModel(
            name='TranscriptFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(max_length=255)),
                ('pdf_file', models.FileField(upload_to='transcripts/pdfs/')),
                ('original_images', models.JSONField(default=list)),
                ('student_info_image', models.CharField(blank=True, max_length=255, null=True)),
                ('course_history_image', models.CharField(blank=True, max_length=255, null=True)),
                ('credit_summary_image', models.CharField(blank=True, max_length=255, null=True)),
                ('parsed_data', models.JSONField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data_manager.userprofile')),
            ],
            options={
                'db_table': 'TranscriptFile',
            },
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('timetable_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.semester')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.userprofile')),
            ],
            options={
                'db_table': 'time_table',
            },
        ),
        migrations.CreateModel(
            name='UserReview',
            fields=[
                ('user_review_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='별점')),
                ('comment_text', models.TextField(blank=True, null=True, verbose_name='리뷰 본문')),
                ('categories', models.JSONField(default=dict, verbose_name='카테고리 선택')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_manager.semester', verbose_name='학기')),
                ('summary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='data_manager.coursereviewsummary', verbose_name='요약 통계')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.userprofile', verbose_name='작성자 프로필')),
            ],
            options={
                'verbose_name': '개별 강의평',
                'verbose_name_plural': '개별 강의평',
                'db_table': 'user_review',
            },
        ),
        migrations.AlterUniqueTogether(
            name='courses',
            unique_together={('course_code', 'semester_id', 'section')},
        ),
        migrations.CreateModel(
            name='TimeTableDetail',
            fields=[
                ('detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('schedule_info', models.CharField(max_length=255)),
                ('user_note', models.TextField(blank=True, null=True)),
                ('custom_color', models.CharField(default='#FFFFFF', max_length=50)),
                ('course', models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.courses')),
                ('timetable', models.ForeignKey(db_column='timetable_id', on_delete=django.db.models.deletion.CASCADE, to='data_manager.timetable')),
            ],
            options={
                'db_table': 'TIME_TABLE_DETAIL',
                'unique_together': {('timetable', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('transcript_id', models.AutoField(primary_key=True, serialize=False)),
                ('grade', models.CharField(help_text='A+, B0, P, F 등', max_length=10)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='data_manager.courses', verbose_name='이수 과목')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcripts', to='data_manager.userprofile')),
            ],
            options={
                'verbose_name': '사용자 이수 내역',
                'verbose_name_plural': '사용자 이수 내역 목록',
                'db_table': 'Transcript',
                'unique_together': {('user_profile', 'course')},
            },
        ),
    ]
